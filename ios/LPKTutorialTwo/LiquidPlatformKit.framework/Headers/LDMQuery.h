//
//  LDMQuery.h
//  LiquidDataModel
//
//  Created by Bryan Nagle on 7/3/12.
//  Copyright Everglade Solutions, Inc., d/b/a Liquid Analytics. 2008 2009 2010 2011 2012 2013  All rights reserved
//

#import <Foundation/Foundation.h>
#import "LDMDefinition.h"

@class LDMDataManager;
@class LDMItemSchema;
@class LDMQueryFilter;
@class LDMQueryFilterClause;

/** The LDMQuery class is used to define logical conditions used to constrain a search for a fetch in LDMDataManager */
@interface LDMQuery : LDMDefinition
/** The LDMItemSchema of the type of item to be fetched */
@property (strong) LDMItemSchema *itemSchema;
/** The datamanager to do the fetch in
 @bug is this needed? LDMDataManager is a singleton, why pass it in? */
@property (strong) LDMDataManager *dataManager;

@property (strong, nonatomic) LDMQueryFilter *queryFilter;
/** The type of item to fetch 
 @bug is this redundant given that we can pass in an entire item schema? */
@property (strong) NSString *itemType;

@property (strong) NSString *filterRelation;

/** text to use for filtering */
@property (strong) NSString *searchText;

/** Maximum number of items to fetch */
@property NSInteger limit;

/** field name to order the results by. 
 @bug What happens if this is null? */
@property (strong) NSString *orderBy;

/** If true, results will be sorted in descending order. 
 @bug, may want to think about flipping this to be consistent with NSSortDescriptor */
@property BOOL descending;

/** An optional SQL select statement to use if the query to be performed is to complex to be expressed otherwise */
@property (strong) NSString *selectStatement;

/** An NSArray of parameters to bind with the select statement defined in selectStatement */
@property (nonatomic, strong) NSArray *params;

/** @bug not sure what this does */
@property BOOL resolved;

/** Initializes the LDMQuery with parameters from an NSDictionary
 @param newDict NSDictionary containing parameters
 @param aDataManager the data manager the LDMQuery will be executed against */
- (id)initWithDict:(NSDictionary *)newDict inDataManger:(LDMDataManager*)aDataManager;

/** Configures a LDMQuery instance with parameters from an NSDictionary
 @param dict NSDictionary containing parameters
*/
- (void)setupWithDict:(NSDictionary *)dict;

/** The where clause generated by this LDMQuery */
- (NSString *)whereClause;

/** @bug not sure */
- (void)finalizeQuery;

/** @bug not sure */
- (LDMQueryFilterClause *)generateSearchClause;



@end
